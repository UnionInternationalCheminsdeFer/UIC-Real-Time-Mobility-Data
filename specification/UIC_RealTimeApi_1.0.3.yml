openapi: 3.1.0                                     
info:
  title: UIC 90918-X
  version: 1.0.2
  description: Specifications for the UIC Real Time API.


webhooks:
  serviceRunEvent:
    post:
      operationId: serviceRunUpdateHook
      parameters:
         - $ref: "#/components/parameters/idempotencyKey"
      requestBody:
        description: Information about a service run event (new service, delays, ..). The request will be repeated until it is confirmed. The repetition times will be doubled with each retry. Repetition ends after 1 day. The service confirms the acceptance of the data as soon as the data have been stored. Retrieving the referenced service is not included in the confirmation.
        content:
          application/json; profile="https://uic.org/rtd/2.0":
            schema:
              $ref: "#/components/schemas/ServiceRunUpdate"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported          
        "409":
          description: conflict - event already received  
        "422": 
          description: unprocessable entry - same idempotency key but different event
        "500":
          description: internal error
        "501":
          description: not implemented
        "503":
          description: unavailable    
      
paths:
  /serviceRun:
    post:
      tags:
        - ServiceRun
      summary: creates or replaces a service run
      description: Creates a new service run or replaces an existing one. The sender is responsible to repeat the request in case the api service in not available. The idempotency key indicates a retry of the same request. 
      operationId: postService
      parameters:
         - $ref: "#/components/parameters/idempotencyKey"
      requestBody:
        description: add or update a service run
        content:
          application/json; profile="https://uic.org/rtd/2.0":
            schema:
              $ref: "#/components/schemas/ServiceRun"
      responses:
        "200":
          description: service created or updated
        "400":
          description: bad request
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported              
        "409":
          description: conflict - service already existing and idempotency key does not fit.
        "422": 
          description: unprocessable entry - same idempotency key different service
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"


  /subscriptions:
    get:
      tags:
        - Subscriptions
      summary: get a list of all subscriptions
      description: get the list of subscriptions
      operationId: getSubscriptions
      responses:
        "200":
          description: list of subscriptions made by the sender
          content:
            application/json; profile="https://uic.org/rtd/2.0"::
              schema:
                $ref: "#/components/schemas/SubscriptionInfos"
        "400":
          description: bad request
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported         
        "404":
          description: no place information found
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
    
    post:
      tags:
        - Subscriptions
      summary: create a new subscription
      description: new create a new subscription
      operationId: subscribe
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
      requestBody:
        description: request for subscription
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        "200":
          description: Subscription accepted, id is provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        "400":
          description: bad request
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported            
        "409":
          description: conflict - subscription already existing  
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"

  /subscriptions/{id}:
    delete:
      tags:
          - Subscriptions
      summary: delete a subscription
      description: delete a subscription
      operationId: deleteSubscription
      parameters:
          - in: path
            name: id
            schema:
              type: string
            example:
              - "1317155f-a458-429f-8b2d-b5b5a677def4"
            required: true
            description: ID of the subscription to delete.
      responses:
        "204":
          description: ok No Content
        "400":
           description: bad request
           content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: conflict
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: Not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"

    patch:
      tags:
          - Subscriptions
      summary: patch a subscription with new user and accesss token or uri
      description: patch a subscription
      operationId: patchSubscription
      parameters:
          - $ref: "#/components/parameters/idempotencyKey"
          - in: path
            name: id
            schema:
              type: string
            example: 
              - "1317155f-a458-429f-8b2d-b5b5a677def4"
            required: true
            description: ID of the subscription to patch.          
      requestBody:
        description: request for subscription
        content:
          application/json; profile="https://uic.org/rtd/2.0"::
            schema:
              $ref: "#/components/schemas/SubscriptionPatch"          
      responses:
        "204":
          description: ok No Content
        "400":
          description: bad request
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: none of the the provided content versions in the profile is supported         
        "404":
          description: Not Found
        "409":
          description: conflict
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: Not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"

  /serviceRuns/{serviceRunId}:
    get:
      tags:
        - ServiceRuns
      summary: returns a service run by service run id
      description: returns a service updated in the service update received via the web hook
      operationId: getServiceRun
      parameters:
        - in: path
          name: serviceRunId
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the service run to get.
      responses:
        "200":
          description: the requested service run
          content:
            application/json; profile="https://uic.org/rtd/2.0"::
              schema:
                $ref: "#/components/schemas/ServiceRun"
        "400":
          description: bad input parameter
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported       
        "404":
          description: no place information found
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"

  /serviceRuns/get:
    post:
      tags:
        - ServiceRuns
      summary: returns service runs by service run ids 
      description: returns the latest version of the serivce runs 
      operationId: getServiceRuns
      requestBody:
        description: IDs of the service runs to get
        content:
          application/json; profile="https://uic.org/rtd/2.0":
            schema:
              $ref: "#/components/schemas/ServiceRunIds"
      responses:
        "200":
          description: the requested service run
          content:
             application/json; profile="https://uic.org/rtd/2.0":
              schema:
                $ref: "#/components/schemas/ServiceRuns"
        "400":
          description: bad input parameter
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported       
        "404":
          description: no place information found
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"

  /serviceRuns/search:
    post:        
      tags:
        - ServiceRuns
      summary: finds service runs by the service name, travel date, country, ... 
      description: finds service runs by the service name, travel datee, country, ... 
      operationId: searchServiceRuns
      requestBody:
        description: search parameter to search for service runs
        content:
          application/json; profile="https://uic.org/rtd/2.0":
            schema:
              $ref: "#/components/schemas/ServiceRunSearchParams"
      responses:
        "200":
          description: the service runs for which the id is provided
          content:
            application/json; profile="https://uic.org/rtd/2.0"::
              schema:
                $ref: "#/components/schemas/ServiceRuns"
        "400":
          description: bad request
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "406":
          description: none of the the provided content versions in the profile is supported            
        "404":
          description: no service found
        "500":
          description: internal error
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"
        "501":
          description: not implemented
        "503":
          description: service currently unavailable
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorDescription"    
          
          
security:
  - oAuth2ClientCredentials: []
            
            
components:

  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: See http://https://oauth.net/2/
      flows: 
        clientCredentials: 
          tokenUrl: https://xxx.xxx.xxx/oauth2/token/
          scopes: {} # not used

  parameters:

    idempotencyKey:
      name: Idempotency-Key
      in: header
      description: The HTTP Idempotency request header field can be used to carry idempotency key in order to make non-idempotent HTTP methods such as POST or PATCH fault-tolerant.
      schema:
        type: string
        format: uuid
      required: false
      example:
        - "99a28fde-b08b-450f-8691-38a5d2faa7b8"
      
  schemas:

    DateTime:
      description: UTC date in format YYYY-MM-DDThh:mm:ss.sTZD. TZD must be given as offset (eg. 1997-07-16T19:20:30.45+01:00)
      type: string
      format: date-time
      examples: 
        - "2023-07-16T19:20:30.45+01:00"

    ErrorDescription:
      description: error description for an error that occurred in a queue
      type: object
      properties:
        type:
          type: string
          enum:
            - SCHEMA_VIOLATION
            - OTHER
          exmples:
            - SCHEMA_VIOLATION
        time:
          type: string
          format: date-time
        severity:
          type: string
          enum:
            - ERROR
            - WARNING
            - INFO
          examples:
            - ERROR
        dataPayload:
          description: base64 encoded data payload that caused the error
          type: string
          contentEncoding: base64
          examples: 
            - "dGhpc19pc19hX3BheWxvYWQ="
        description:
          type: string
          examples: 
            - "Format error at position 133 of the message"
        correlationId:
          description: correlation id of the data delivery that caused the error
          type: string
          examples:
            - "ed4ddf24-7b60-42c9-a10b-fb8c35cd8b44"
      required:
        - type
        - time
        - severity

    ServiceRunIds:
      description: list of service run ids
      properties:
        serviceRunIds:
          type: array
          items:
            type: string
            format: uuid
          minitems: 1
          maxitems: 100
      required: 
        - ServiceRunIds    

    ServiceRunUpdate:
      description: information on an event that has created or altered a service
      type: object
      properties:
        id: 
          type: string
          format: uuid  
          examples: 
            - "3fd02c20-c53a-4eee-80b4-0fbb8de3ae98"
        serviceRunNotifications:
          type: array
          items:
            $ref: "#/components/schemas/ServiceRunNotification"
          minitems: 1
          maxitems: 100
        timestamp:
          $ref: "#/components/schemas/DateTime"     
      required:
        - id     
        - serviceRunNotifications
        - timestamp

    ServiceRunNotification:
      description: Notification on a service run change
      type: object
      properties:
        eventType:
          type: string
          enum: 
            - NEW
            - UPDATE
          examples:
            - "UPDATE"
        changeIndications:
          description: list of change indicators compared to the previous notification 
          type: array
          items:
            type: string
            format: x-extensible-enum
              - DELAY_CHANGE
              - STOP_CANCELLED
              - STOP_ADDED
              - NEW_GEO_TRACKING
              - PLATFORM_CHANGE
              - CONNECTION_CHANGE
        serviceRunId:  
          description: id of the service run changed
          type: string
          format: uuid
          examples: 
            - "3fd02c20-c53a-4eee-80b4-0fbb8de3ae97"    
        lastNotificationTime:  
          description: timestamp of the last notification on this service. This can be used to detect missed updates.     
          $ref: "#/components/schemas/DateTime"      
      required:
          - eventType
          - serviceRunId

    ServiceRuns:
      type: array
      items:
        $ref: "#/components/schemas/ServiceRun"
      minitems: 1
      maxitems: 100
        
    ServiceRunSearchParams:
      type: object
      properties:    
        serviceName:
          description: >-
            commercial servide name (in case of trains the train number) used for
            communication with the customer. Eigther service or line number must
            be provided
          type: string
          example: "4711"
        lineName:
          type: string
          examples:
            - "11"
            - "Circle Line"
        travelDate:
          decription: planned travel date in local time 
          type: string
          format: date
          examples:
            - "1997-07-16"
        country:
          description: a country where the serice must run
          $ref: "#/components/schemas/Country"
        carrier:
          description: a carrier involved in the service
          $ref: "#/components/schemas/Company"
        
    ServiceRun:
      type: object
      properties:
        dataDelivery:
          description: >-
            main service refence for this service run. The service reference might 
            change along the route, the changed service refences are then included
            in the departiure event for the next part of the route
          $ref: "#/components/schemas/DataDelivery"
        serviceRunRef:
          $ref: "#/components/schemas/ServiceRunReference"
        replacedServiceRuns:
          description: list of services replaced by this service
          type: array
          items:
            $ref: "#/components/schemas/ServiceRunReference"
        replacingServices:
          description: list of services replacing this service
          type: array
          items:
            $ref: "#/components/schemas/ServiceRunReference"       
        timeTableReference:
           description: reference to a time table
           $ref: "#/components/schemas/TimeTableReference"     
        events:
          description: list of events along the service run ordered by time
          type: array
          items:          
             $ref: "#/components/schemas/ServiceRunEvent"
        cancelled:
          description: default false
          type: boolean
          default: false
        cancellationType:
          $ref: "#/components/schemas/CancellationType"     
        facilities:
          description: >-
            facilities available on the whole routes of the service run. Additional
            facilities on specific sections are part of the VehicleStop object of the departure of the section
          type: array
          items:
            description: OSDM code list
            type: string
          examples:
            - "ALIGHTING_POSSIBLE_30M"
            - "NURSERY_SERVICE"          
      required:
        - serviceRunId
        - dataDelivery
        - serviceRunRef
        - events
        
    CancellationType:
       description: >-
             details on the cause of cancellation. Either cancelled by 
             the Carrier by sending the cancel information (CANCELLED_BY_CARRIER) or cancelled as the Carrier did not 
             send the stop compared to the reference time table (MISSING_FROM_CARRIER) or the service is not any more included 
             in a new time table update (MISSING_FROM_TIMETABLE) .
       type: string
       format: x-extensible-enum
             - MISSING_FROM_CARRIER
             - CANCELLED_BY_CARRIER  
             - MISSING_FROM_TIMETABLE
    
    
    TimeTableReference:
      type: object
      properties:
        timeTable:
          description: name of thetime table
          type: string
          format: x-extensible-enum
            - UIC_MERITS
          examples:
            - "UIC_MERITS"
        version:
          description: referenced version of the time table. In case of MERITS the date of delivery used in the file name.
          type: string
          examples: 
            - "2024-07-14"
      required:
       - timeTable
       - version
         
        
    
    DataDelivery:
      type: object
      properties:
        id:
          description: id of the data delivery used for tracking and error reporting
          type: string
          format: uuid
          examples: 
            - "149c9b31-9b75-43e7-8677-22c8348cdb66"
        provider:
          $ref: "#/components/schemas/Company"
        creationTime:
          description: "creation date of the data. New data will replace all older data "
          $ref: "#/components/schemas/DateTime"              
        contributingProviders:
          description: list of contributing providers in case of consolidated data
          type: array
          items:
            - $ref: "#/components/schemas/Company"
      required:
        - id
        - provider
        - creationTime 
        
    VehicleGroup:
      type: object
      properties:
        serviceRunRef:
          description: >- 
               service number for the vehicle group. This might be different from the main service number
          $ref: "#/components/schemas/ServiceRunReference"
      
        vehicles:
          type: array
          items:
            $ref: "#/components/schemas/VehicleStop"
 
    VehicleGroupRef:
       type: object
       properties:
         serviceRunRef:
           description: >- 
                service number for the vehicle group. This might be different from the main service number
           $ref: "#/components/schemas/ServiceRunReference"
       
         vehicleRefs:
           type: array
           items:
            $ref: "#/components/schemas/VehicleRef"
            
    VehicleRef:
      type: object
      properties:
        vehicleId:
          description: UIC vehicle id or  another code defined as urn
          type: string
          examples: 
            - "31816650286"
            - "urn:uic:veh:31816650286"
        vehicleNumber:
          description: >-
            vehicle number used for customer commmunication in bookings and on
            platforms. Note: not all verhicles might have a number (e.g. luggage
            coaches, locomotives)
          type: string
          examples:
            - "12"      

    VehicleStop:
      type: object
      properties:
        vehicleRef:
          $ref: "#/components/schemas/VehicleRef"
        facilities:
          description: additional facilities available in the vehicle for the next section
          type: array
          items:
            description: OSDM code list
            type: string
          examples:
            - "ALIGHTING_POSSIBLE_30M"
            - "NURSERY_SERVICE"
        serviceClasses:
          type: array
          items:
            description: OSDM code list
            type: string
          examples:
            - SECOND_CLASS  
        platform:
            type: string
            examples:
              - 6
        platformSection:
            type: string
            examples:
              - "C"
        track:
            type: string
            examples:
              - "13"
        trackSection:
            type: string
            examples:
              - "C"
        vehicleStatus:
          description: >-
             option to mark a coach as closed or missing
          type: string
          format: x-extensible-enum
             - USABLE
             - MISSING
             - CLOSED
          default: USABLE                 
    
    Location:
      description: >-
             location code: either merits code or from another code list formatted as urn
      type: object
      properties: 
        code: 
          type: string
          examples:
            - "8012345"
            - "urn:uic:stn:8512345"
            - "urn:NL:nationalLocations:8512345"
        name:
          type: string
          examples:
            - "Amsterdam Centraal"
            - "Köln Hbf"
      required:
        - code
    
    ServiceRunReference:
      type: object
      properties:
        serviceRunId:
          description: unique id of the service run in the real time platform
          type: string
          examples: 
            - "5179f99c-f52d-4b51-a3a7-daa71b69bbe2"
        serviceName:
          description: >-
            commercial servide name (in case of trains the train number) used for
            communication with the customer. Eigther service or line number must
            be provided
          type: string
          examples: 
           - "4711"
        lineName:
          type: string
          examples:
            - "11"
        lineserviceRunId:
          description: >-
            internal service number in case only the line number is used in
            customer communication
          type: string
          examples:
            - "1234511"
        serviceBrands:
          description: service brands in case the service is maketed under different brands
          type: array
          items:
             $ref: "#/components/schemas/ServiceBrand"   
               
        timeTableReferences:
          description: >-
            references of this service to a technical service id used in a time table
          type: array
          items:
            $ref: "#/components/schemas/TimeTableserviceRunId"    

        providerServiceRunIds:
          description: service ids of the data providers for this service
          type: array
          items:
            type: object
            properties:
              provider:
                $ref: "#/components/schemas/Company"
              serviceRunId:
                type: string
            required:
              - provider
              - serviceRunId
          examples:
              - provider: "0080"
                serviceRunId: "43b65be1-dce9-42a3-b4df-9b8153129eae" 
           
      required:
        - serviceName
    
    ServiceBrand:
      description: >-
         service brand code of urn providing a code from another code list.
      type: object
      properties:
        code:
          type: string
          examples:
              - "51"
              - "urn:uic:sbc:51"
        abbreviation:
          type: string
          examples:
            - "ICE"    
    
    TimeTableserviceRunId:
       type: object
       properties:
          timeTable:
            $ref: "#/components/schemas/TimeTableReference"    
          id: 
            type: string
            examples: 
               - "43b65be1-dce9-42a3-b4df-9b8153129eae" 
       required:
               - id
    
    Departure:
      allOf:
        - $ref: '#/components/schemas/ServiceRunEvent'
        - $ref: '#/components/schemas/TimeTabledServiceRunEvent'
        - type: object    
          properties:
              carrier:
                 $ref: "#/components/schemas/Company"
              significance:
                 $ref: "#/components/schemas/Significance"
              stopId:
                 description: uniqueId of the stop to distinguish multiple stops at the same station
                 type: string
                 examples:
                   - "2f31d510-5944-4280-a90b-32ec0ba86965"
              boarding:
                 description: indicator for restricted boarding 
                 type: boolean
                 default: true   
              occupancy:
                 type: string
                 format: x-extensible-enum
                   - EMPTY
                   - MANY_SEATS_AVAILABLE
                   - FEW_SEATS_AVAILABLE
                   - STANDING_ROOM_ONLY
                   - NOT_ACCEPTING_PASSENGERS
              congestion:
                 description: e.g. stuck in traffic jam, no delay estimation available
                 type: boolean
                 default: true
              platform:
                type: string
                examples:
                 - 13B
              track:
                type: string
                examples:
                 - "13B"         
              vehicleGroups:
                description: groups of vehicles. Multiple groups can be used to describe connected service parts with separate service names.
                type: array
                items:
                  $ref: "#/components/schemas/VehicleGroup"             
          required:
             - location
             - carrier
             - significance
             - stopId
             - plannedTime
        
    Arrival:
      allOf:
        - $ref: '#/components/schemas/ServiceRunEvent'
        - $ref: '#/components/schemas/TimeTabledServiceRunEvent'
        - type: object    
          properties:   
              carrier:
                 $ref: "#/components/schemas/Company"
              stopId:
                 description: uniqueId of the stop to distinguish multiple stops at the same station
                 type: string
                 examples:
                   - "2f31d510-5944-4280-a90b-32ec0ba86965"          
              significance:
                $ref: "#/components/schemas/Significance"
              alighting:
                 description: indicator for restricted alighting. true = alighting allowed
                 type: boolean
                 default: true                
              vehicleGroups:
                description: groups of vehicles. Multiple groups can be used to describe connected service parts with separate service names.
                type: array
                items:
                  $ref: "#/components/schemas/VehicleGroup"
              platform:
                type: string
                examples:
                 - 13B
              track:
                type: string
                examples:
                 - "13B"
              connections:
                type: array
                items:
                  $ref: "#/components/schemas/Connection"
          required:
             - location 
             - carrier
             - significance
             - plannedTime
             - stopId
        
    PassThrough:
      allOf:
        - $ref: '#/components/schemas/ServiceRunEvent'
        - $ref: '#/components/schemas/TimeTabledServiceRunEvent'
        - type: object
          properties:       
              type:
                type: string
                format: x-extensible-enum
                  - STATION
                  - IM_HAND_OVER
                  - IM_POINT
                examples:
                  - "STATION"                  
              fromIM:
                $ref: "#/components/schemas/Company"
              toIM:
                description: handover from this infratstucture manager
                $ref: "#/components/schemas/Company"                
          required:
              - location
              - type  
              
    DelayReason:
      description: reason code for delays TAF codes of uic codes
      type: string
      examples: 
        - "urn:x-taf:25"
        - "WAITING_FOR_DELAYED_PASSENGERS"
    
    Significance:
      description: >-
        indication whether the provider is responsible for these data or whether
        he has forwarded these data for convenience only. In the later case the platform might replace these with data from the carier when available.
      type: string
      enum:
        - FORWARDED
        - MASTER

    StopStatus:
      type: string
      format: x-extensible-enum
        - PLANNED
        - ON_REQUEST
        - REQUESTED
      default: ON_REQUEST

    DelayStatus:
      type: string
      enum:
        - UNKNOWN
        - CANCELLED
        - DELAYED
        - ON_SCHEDULE
      
    ConnectionStatus:
      type: string
      enum:
        - LOST
        - KEPT
        - AT_RISK
      
    Connection:
      type: object
      properties:
        serviceRef:
          $ref: "#/components/schemas/ServiceRunReference"
        status:
          $ref: "#/components/schemas/ConnectionStatus"
      required:
        - serviceRef
        - status
    
    
    Company:
      description: >-
        company code. TAP-TSI code in case of rail. Code list to be qualified by urn.
      type: string
      examples:
       - 2480
       - 1184
       - 0084
       
    Country:
      description: >-
        ISO 3166 2A country code.
      type: string
      examples:
       - DE
       - NL      
      
    SubscriptionInfos:
      type: array      
      items:
        $ref: "#/components/schemas/SubscriptionInfo"

    SubscriptionInfo:
      description: the subscription without the access token.
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples:  
            - "e28de695-9a31-465f-9247-625b5a4fec74"
        company:
          $ref: "#/components/schemas/Company"
        hook:
          type: string
          format: uri
          examples:
            - "https://www.exampleCompany.com:8042/notifications"
        user:
          type: string
          examples:
            - "UicRealTimePlatform"
        acceptedDelayTime:
          description: accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.
          type: integer
          format: int32
        filters:
          description: listed filters apply separately (OR)
          type: array
          items:
            $ref: "#/components/schemas/Filter"
      required:
        - id
        - company
        - hook
        - user

    SubscriptionPatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples:  
            - "e28de695-9a31-465f-9247-625b5a4fec74"
        hook:
          type: string
          format: uri
          examples:
            - "https://www.exampleCompany.com:8042/notifications"
        user:
          type: string
          examples:
            - "UicRealTimePlatform"
        accessToken:
          type: string
          examples: 
            - "dGhpc19pc19hbl9hY2Nlc3NfdG9rZW4="
        acceptedDelayTime:
          description: accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.
          type: integer
          format: int32            
        filters:
          description: listed filters apply separately (OR)
          type: array
          items:
            $ref: "#/components/schemas/Filter"
      required:
        - id
    
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples:  
            - "e28de695-9a31-465f-9247-625b5a4fec74"
        company:
          $ref: "#/components/schemas/Company"
        hook:
          type: string
          format: uri
          examples:
            - "https://www.exampleCompany.com:8042/notifications"
        user:
          type: string
          examples:
            - "UicRealTimePlatform"
        accessToken:
          type: string
          examples: 
            - "dGhpc19pc19hbl9hY2Nlc3NfdG9rZW4="
        acceptedDelayTime:
          description: accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.
          type: integer
          format: int32            
        filters:
          description: listed filters apply separately (OR)
          type: array
          items:
            $ref: "#/components/schemas/Filter"
      required:
        - id
        - company
        - hook
        - user
        - accessToken
    
    Filter:
      type: object
      properties:
        includedCarriers:
          description: applies in case one of these companies is the carrier on some part of the service
          type: array
          items:
            $ref: "#/components/schemas/Company"
        excludedCarriers:
          description: applies in case the sevice is run by these carriers only
          type: array
          items:
            $ref: "#/components/schemas/Company"
        includedCountries:
          description: applies in case one of these countries is part of the route of the service
          type: array
          items:          
            $ref: "#/components/schemas/Country"
        excludedCountries:
          description: applies in case the service is run in these countries only
          type: array
          items:          
            $ref: "#/components/schemas/Country"          
        countryBorderCrossings:
          description: applies in case the service is crossing the border between the specified countries in one of the border crossings
          type: array
          items:
            $ref: "#/components/schemas/CountryBorderCrossing"
        multiCarrierServicesOnly:
          description: data will be provided for multi carrier services only 
          type: boolean
          default: false
        countryCrossBorderOnly:
          description: data will be provided for services crossing country borders only 
          type: boolean
          default: false        
    
    CountryBorderCrossing:
      description: crossing between two countries
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: "#/components/schemas/Country"
      
    ServiceRunEvent:
      description: Event on a service run. This could eigther be a departure, arrival, a pass through or a geo-tracking.
      type: object
      additionalProperties: false
      discriminator:
         propertyName: objectType
      properties:
         objectType:
            description: Attribute is used as discriminator for inheritance between data types.
            type: string
      required:
          - objectType
      
    GeoTracking:
      allOf:
        - $ref: "#/components/schemas/ServiceRunEvent"
        - type: object
          description: >- 
               Geo-Tracking-Event on a service run. Documents the position of a service (or vehicle group of a service) at a time.
          properties:
              time:
                description: time when the service was at the provided position
                type: string
                format: date-time
                examples:
                  - "2024-07-14T19:43:37+01:00"       
              position:
                $ref: '#/components/schemas/GeoPosition'
              vehicleGroupRefs:
                description: groups of vehicles where this geo-position applies
                type: array
                items:
                  $ref: "#/components/schemas/VehicleGroupRef"  
          required:
              - objectType
              - time
              - position
      
    TimeTabledServiceRunEvent:
          type: object        
          description: >-
             Event on a service run. This could eigther be a departure, arrival or a pass through.
          properties:
            location:
              $ref: "#/components/schemas/Location" 
            plannedTime:
              description: planned time according to the data provider of the event 
              type: string
              format: date-time
              examples:
                - "2024-07-14T19:43:37+01:00"
            timeTabledTime:
              description: planned time according to the referenced time table
              type: string
              format: date-time
              examples:
               - "2024-07-14T19:43:37+01:00"
            consolidatedEstimatedTime:
              description: >-
                  estimation consolidated by the exchange platform to be consistent across multiple involved carriers
              type: string
              format: date-time   
              examples:
                - "2024-07-14T19:43:37+01:00"                
            estimatedTime:
              type: string
              format: date-time
              examples:
               - "2024-07-14T19:43:47+01:00"
            actualTime:
              description: Time when the arrival actually occured. Provided after arrival only.
              type: string
              format: date-time
              examples:
                - "2024-07-14T19:43:46+01:00"   
            status:
              $ref: "#/components/schemas/DelayStatus"  
            stopStatus:
              $ref: "#/components/schemas/StopStatus"   
            cancelled:
               description: default false
               type: boolean
               default: false                
            cancellationType:
               $ref: "#/components/schemas/CancellationType"          
            reasonForDelay:
              type: array
              items:
                 $ref: "#/components/schemas/DelayReason"                  
          required:
            - objectType
            - location
            - plannedTime
            
    GeoPosition:
      type: object
      additionalProperties: false
      description: >-
        WGS84 coordinates position. Provided by OJP.
      required:
        - longitude
        - latitude
      properties:
        longitude:
          $ref: '#/components/schemas/Longitude'
        latitude:
          $ref: '#/components/schemas/Latitude'

    Longitude:
      type: number
      format: double
      description: >-
        Longitude from Greenwich Meridian. -180 (West) to +180 (East). Decimal degrees. eg 2.356.
      minimum: -180
      maximum: 180
      nullable: false
      example: 8.54021

    Latitude:
      type: number
      format: double
      description: >-
        Latitude from equator. -90 (South) to +90 (North). Decimal degrees. e.g. 56.356.
      minimum: -90
      maximum: 90
      nullable: false
      example: 47.37818   
